name: CI Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code from dev branch
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Run tests
      - name: Run tests
        run: |
          mkdir -p test-results
          npm test -- --reporter mocha-junit-reporter --reporter-options mochaFile=./test-results/results.xml

      - name: Test results publish
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: test-results-artifact
          path: test-results/results.xml

      - name: Run code quality using eslint (JavaScript framework)
        run: |
          set -o pipefail
          npx eslint . --ext .js --exit-on-fatal-error -f stylish | tee lint-report.txt

      - name: Code quality publish
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: code-quality-artifact
          path: lint-report.txt

      - name: Dependency check
        run: |
          npm audit --audit-level=high --json > npm-audit-report.json

      - name: Vulnerability report
        if: always()
        uses: actions/upload-artifact@v4.6.2
        with:
          name: code-dependency-artifact
          path: npm-audit-report.json

      - name: Build docker image
        run: docker build -t my-node-app .

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh
          sudo mv ./bin/trivy /usr/local/bin/
          trivy --version

      - name: Scan docker image
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL my-node-app

      - name: Run test inside container
        run: docker run --rm my-node-app npm test

      - name: Logging into Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Tag docker image
        run: |
          docker tag my-node-app ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-latest
          docker tag my-node-app ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-${{ github.sha }}

      - name: Push docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-node-app:dev-${{ github.sha }}

  deploy:
    needs: build_test
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/v1/services/srv-d2qop5qdbo4c73cdmhhg/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json"
